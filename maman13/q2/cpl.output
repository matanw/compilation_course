Grammar

    0 $accept: program $end

    1 program: declarations stmt_block

    2 declarations: declarations declaration
    3             | %empty

    4 declaration: idlist ':' type ';'

    5 type: INT
    6     | FLOAT

    7 idlist: idlist ',' ID
    8       | ID

    9 stmt: assignment_stmt
   10     | input_stmt
   11     | output_stmt
   12     | if_stmt
   13     | while_stmt
   14     | switch_stmt
   15     | break_stmt
   16     | stmt_block

   17 assignment_stmt: ID '=' expression ';'

   18 input_stmt: INPUT '(' ID ')' ';'

   19 output_stmt: OUTPUT '(' expression ')' ';'

   20 if_stmt: IF ')' boolexpr '(' stmt ELSE stmt

   21 while_stmt: WHILE ')' boolexpr '(' stmt

   22 switch_stmt: SWITCH '(' expression ')' '{' caselist DEFAULT ':' stmtlist '}'

   23 caselist: caselist CASE NUM ':' stmtlist
   24         | %empty

   25 break_stmt: BREAK ';'

   26 stmt_block: '{' stmtlist '}'

   27 stmtlist: stmtlist stmt
   28         | %empty

   29 boolexpr: boolexpr OR boolterm
   30         | boolterm

   31 boolterm: boolterm AND boolfactor
   32         | boolfactor

   33 boolfactor: NOT '(' boolexpr ')'
   34           | expression RELOP expression

   35 expression: expression ADDOP term
   36           | term

   37 term: term MULOP factor
   38     | factor

   39 factor: '(' expression ')'
   40       | CAST '(' expression ')'
   41       | ID
   42       | NUM


Terminals, with rules where they appear

$end (0) 0
'(' (40) 18 19 20 21 22 33 39 40
')' (41) 18 19 20 21 22 33 39 40
',' (44) 7
':' (58) 4 22 23
';' (59) 4 17 18 19 25
'=' (61) 17
'{' (123) 22 26
'}' (125) 22 26
error (256)
NUM (258) 23 42
ID (259) 7 8 17 18 41
BREAK (260) 25
CASE (261) 23
DEFAULT (262) 22
ELSE (263) 20
FLOAT (264) 6
IF (265) 20
INPUT (266) 18
INT (267) 5
OUTPUT (268) 19
SWITCH (269) 22
WHILE (270) 21
RELOP (271) 34
ADDOP (272) 35
MULOP (273) 37
OR (274) 29
AND (275) 31
NOT (276) 33
CAST (277) 40


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
declarations (33)
    on left: 2 3, on right: 1 2
declaration (34)
    on left: 4, on right: 2
type (35)
    on left: 5 6, on right: 4
idlist (36)
    on left: 7 8, on right: 4 7
stmt (37)
    on left: 9 10 11 12 13 14 15 16, on right: 20 21 27
assignment_stmt (38)
    on left: 17, on right: 9
input_stmt (39)
    on left: 18, on right: 10
output_stmt (40)
    on left: 19, on right: 11
if_stmt (41)
    on left: 20, on right: 12
while_stmt (42)
    on left: 21, on right: 13
switch_stmt (43)
    on left: 22, on right: 14
caselist (44)
    on left: 23 24, on right: 22 23
break_stmt (45)
    on left: 25, on right: 15
stmt_block (46)
    on left: 26, on right: 1 16
stmtlist (47)
    on left: 27 28, on right: 22 23 26 27
boolexpr (48)
    on left: 29 30, on right: 20 21 29 33
boolterm (49)
    on left: 31 32, on right: 29 30 31
boolfactor (50)
    on left: 33 34, on right: 31 32
expression (51)
    on left: 35 36, on right: 17 19 22 34 35 39 40
term (52)
    on left: 37 38, on right: 35 36 37
factor (53)
    on left: 39 40 41 42, on right: 37 38


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (declarations)

    program       go to state 1
    declarations  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: declarations . stmt_block
    2 declarations: declarations . declaration

    ID   shift, and go to state 4
    '{'  shift, and go to state 5

    declaration  go to state 6
    idlist       go to state 7
    stmt_block   go to state 8


State 3

    0 $accept: program $end .

    $default  accept


State 4

    8 idlist: ID .

    $default  reduce using rule 8 (idlist)


State 5

   26 stmt_block: '{' . stmtlist '}'

    $default  reduce using rule 28 (stmtlist)

    stmtlist  go to state 9


State 6

    2 declarations: declarations declaration .

    $default  reduce using rule 2 (declarations)


State 7

    4 declaration: idlist . ':' type ';'
    7 idlist: idlist . ',' ID

    ':'  shift, and go to state 10
    ','  shift, and go to state 11


State 8

    1 program: declarations stmt_block .

    $default  reduce using rule 1 (program)


State 9

   26 stmt_block: '{' stmtlist . '}'
   27 stmtlist: stmtlist . stmt

    ID      shift, and go to state 12
    BREAK   shift, and go to state 13
    IF      shift, and go to state 14
    INPUT   shift, and go to state 15
    OUTPUT  shift, and go to state 16
    SWITCH  shift, and go to state 17
    WHILE   shift, and go to state 18
    '{'     shift, and go to state 5
    '}'     shift, and go to state 19

    stmt             go to state 20
    assignment_stmt  go to state 21
    input_stmt       go to state 22
    output_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    switch_stmt      go to state 26
    break_stmt       go to state 27
    stmt_block       go to state 28


State 10

    4 declaration: idlist ':' . type ';'

    FLOAT  shift, and go to state 29
    INT    shift, and go to state 30

    type  go to state 31


State 11

    7 idlist: idlist ',' . ID

    ID  shift, and go to state 32


State 12

   17 assignment_stmt: ID . '=' expression ';'

    '='  shift, and go to state 33


State 13

   25 break_stmt: BREAK . ';'

    ';'  shift, and go to state 34


State 14

   20 if_stmt: IF . ')' boolexpr '(' stmt ELSE stmt

    ')'  shift, and go to state 35


State 15

   18 input_stmt: INPUT . '(' ID ')' ';'

    '('  shift, and go to state 36


State 16

   19 output_stmt: OUTPUT . '(' expression ')' ';'

    '('  shift, and go to state 37


State 17

   22 switch_stmt: SWITCH . '(' expression ')' '{' caselist DEFAULT ':' stmtlist '}'

    '('  shift, and go to state 38


State 18

   21 while_stmt: WHILE . ')' boolexpr '(' stmt

    ')'  shift, and go to state 39


State 19

   26 stmt_block: '{' stmtlist '}' .

    $default  reduce using rule 26 (stmt_block)


State 20

   27 stmtlist: stmtlist stmt .

    $default  reduce using rule 27 (stmtlist)


State 21

    9 stmt: assignment_stmt .

    $default  reduce using rule 9 (stmt)


State 22

   10 stmt: input_stmt .

    $default  reduce using rule 10 (stmt)


State 23

   11 stmt: output_stmt .

    $default  reduce using rule 11 (stmt)


State 24

   12 stmt: if_stmt .

    $default  reduce using rule 12 (stmt)


State 25

   13 stmt: while_stmt .

    $default  reduce using rule 13 (stmt)


State 26

   14 stmt: switch_stmt .

    $default  reduce using rule 14 (stmt)


State 27

   15 stmt: break_stmt .

    $default  reduce using rule 15 (stmt)


State 28

   16 stmt: stmt_block .

    $default  reduce using rule 16 (stmt)


State 29

    6 type: FLOAT .

    $default  reduce using rule 6 (type)


State 30

    5 type: INT .

    $default  reduce using rule 5 (type)


State 31

    4 declaration: idlist ':' type . ';'

    ';'  shift, and go to state 40


State 32

    7 idlist: idlist ',' ID .

    $default  reduce using rule 7 (idlist)


State 33

   17 assignment_stmt: ID '=' . expression ';'

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    expression  go to state 45
    term        go to state 46
    factor      go to state 47


State 34

   25 break_stmt: BREAK ';' .

    $default  reduce using rule 25 (break_stmt)


State 35

   20 if_stmt: IF ')' . boolexpr '(' stmt ELSE stmt

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    NOT   shift, and go to state 48
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    boolexpr    go to state 49
    boolterm    go to state 50
    boolfactor  go to state 51
    expression  go to state 52
    term        go to state 46
    factor      go to state 47


State 36

   18 input_stmt: INPUT '(' . ID ')' ';'

    ID  shift, and go to state 53


State 37

   19 output_stmt: OUTPUT '(' . expression ')' ';'

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    expression  go to state 54
    term        go to state 46
    factor      go to state 47


State 38

   22 switch_stmt: SWITCH '(' . expression ')' '{' caselist DEFAULT ':' stmtlist '}'

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    expression  go to state 55
    term        go to state 46
    factor      go to state 47


State 39

   21 while_stmt: WHILE ')' . boolexpr '(' stmt

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    NOT   shift, and go to state 48
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    boolexpr    go to state 56
    boolterm    go to state 50
    boolfactor  go to state 51
    expression  go to state 52
    term        go to state 46
    factor      go to state 47


State 40

    4 declaration: idlist ':' type ';' .

    $default  reduce using rule 4 (declaration)


State 41

   42 factor: NUM .

    $default  reduce using rule 42 (factor)


State 42

   41 factor: ID .

    $default  reduce using rule 41 (factor)


State 43

   40 factor: CAST . '(' expression ')'

    '('  shift, and go to state 57


State 44

   39 factor: '(' . expression ')'

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    expression  go to state 58
    term        go to state 46
    factor      go to state 47


State 45

   17 assignment_stmt: ID '=' expression . ';'
   35 expression: expression . ADDOP term

    ADDOP  shift, and go to state 59
    ';'    shift, and go to state 60


State 46

   36 expression: term .
   37 term: term . MULOP factor

    MULOP  shift, and go to state 61

    $default  reduce using rule 36 (expression)


State 47

   38 term: factor .

    $default  reduce using rule 38 (term)


State 48

   33 boolfactor: NOT . '(' boolexpr ')'

    '('  shift, and go to state 62


State 49

   20 if_stmt: IF ')' boolexpr . '(' stmt ELSE stmt
   29 boolexpr: boolexpr . OR boolterm

    OR   shift, and go to state 63
    '('  shift, and go to state 64


State 50

   30 boolexpr: boolterm .
   31 boolterm: boolterm . AND boolfactor

    AND  shift, and go to state 65

    $default  reduce using rule 30 (boolexpr)


State 51

   32 boolterm: boolfactor .

    $default  reduce using rule 32 (boolterm)


State 52

   34 boolfactor: expression . RELOP expression
   35 expression: expression . ADDOP term

    RELOP  shift, and go to state 66
    ADDOP  shift, and go to state 59


State 53

   18 input_stmt: INPUT '(' ID . ')' ';'

    ')'  shift, and go to state 67


State 54

   19 output_stmt: OUTPUT '(' expression . ')' ';'
   35 expression: expression . ADDOP term

    ADDOP  shift, and go to state 59
    ')'    shift, and go to state 68


State 55

   22 switch_stmt: SWITCH '(' expression . ')' '{' caselist DEFAULT ':' stmtlist '}'
   35 expression: expression . ADDOP term

    ADDOP  shift, and go to state 59
    ')'    shift, and go to state 69


State 56

   21 while_stmt: WHILE ')' boolexpr . '(' stmt
   29 boolexpr: boolexpr . OR boolterm

    OR   shift, and go to state 63
    '('  shift, and go to state 70


State 57

   40 factor: CAST '(' . expression ')'

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    expression  go to state 71
    term        go to state 46
    factor      go to state 47


State 58

   35 expression: expression . ADDOP term
   39 factor: '(' expression . ')'

    ADDOP  shift, and go to state 59
    ')'    shift, and go to state 72


State 59

   35 expression: expression ADDOP . term

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    term    go to state 73
    factor  go to state 47


State 60

   17 assignment_stmt: ID '=' expression ';' .

    $default  reduce using rule 17 (assignment_stmt)


State 61

   37 term: term MULOP . factor

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    factor  go to state 74


State 62

   33 boolfactor: NOT '(' . boolexpr ')'

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    NOT   shift, and go to state 48
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    boolexpr    go to state 75
    boolterm    go to state 50
    boolfactor  go to state 51
    expression  go to state 52
    term        go to state 46
    factor      go to state 47


State 63

   29 boolexpr: boolexpr OR . boolterm

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    NOT   shift, and go to state 48
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    boolterm    go to state 76
    boolfactor  go to state 51
    expression  go to state 52
    term        go to state 46
    factor      go to state 47


State 64

   20 if_stmt: IF ')' boolexpr '(' . stmt ELSE stmt

    ID      shift, and go to state 12
    BREAK   shift, and go to state 13
    IF      shift, and go to state 14
    INPUT   shift, and go to state 15
    OUTPUT  shift, and go to state 16
    SWITCH  shift, and go to state 17
    WHILE   shift, and go to state 18
    '{'     shift, and go to state 5

    stmt             go to state 77
    assignment_stmt  go to state 21
    input_stmt       go to state 22
    output_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    switch_stmt      go to state 26
    break_stmt       go to state 27
    stmt_block       go to state 28


State 65

   31 boolterm: boolterm AND . boolfactor

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    NOT   shift, and go to state 48
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    boolfactor  go to state 78
    expression  go to state 52
    term        go to state 46
    factor      go to state 47


State 66

   34 boolfactor: expression RELOP . expression

    NUM   shift, and go to state 41
    ID    shift, and go to state 42
    CAST  shift, and go to state 43
    '('   shift, and go to state 44

    expression  go to state 79
    term        go to state 46
    factor      go to state 47


State 67

   18 input_stmt: INPUT '(' ID ')' . ';'

    ';'  shift, and go to state 80


State 68

   19 output_stmt: OUTPUT '(' expression ')' . ';'

    ';'  shift, and go to state 81


State 69

   22 switch_stmt: SWITCH '(' expression ')' . '{' caselist DEFAULT ':' stmtlist '}'

    '{'  shift, and go to state 82


State 70

   21 while_stmt: WHILE ')' boolexpr '(' . stmt

    ID      shift, and go to state 12
    BREAK   shift, and go to state 13
    IF      shift, and go to state 14
    INPUT   shift, and go to state 15
    OUTPUT  shift, and go to state 16
    SWITCH  shift, and go to state 17
    WHILE   shift, and go to state 18
    '{'     shift, and go to state 5

    stmt             go to state 83
    assignment_stmt  go to state 21
    input_stmt       go to state 22
    output_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    switch_stmt      go to state 26
    break_stmt       go to state 27
    stmt_block       go to state 28


State 71

   35 expression: expression . ADDOP term
   40 factor: CAST '(' expression . ')'

    ADDOP  shift, and go to state 59
    ')'    shift, and go to state 84


State 72

   39 factor: '(' expression ')' .

    $default  reduce using rule 39 (factor)


State 73

   35 expression: expression ADDOP term .
   37 term: term . MULOP factor

    MULOP  shift, and go to state 61

    $default  reduce using rule 35 (expression)


State 74

   37 term: term MULOP factor .

    $default  reduce using rule 37 (term)


State 75

   29 boolexpr: boolexpr . OR boolterm
   33 boolfactor: NOT '(' boolexpr . ')'

    OR   shift, and go to state 63
    ')'  shift, and go to state 85


State 76

   29 boolexpr: boolexpr OR boolterm .
   31 boolterm: boolterm . AND boolfactor

    AND  shift, and go to state 65

    $default  reduce using rule 29 (boolexpr)


State 77

   20 if_stmt: IF ')' boolexpr '(' stmt . ELSE stmt

    ELSE  shift, and go to state 86


State 78

   31 boolterm: boolterm AND boolfactor .

    $default  reduce using rule 31 (boolterm)


State 79

   34 boolfactor: expression RELOP expression .
   35 expression: expression . ADDOP term

    ADDOP  shift, and go to state 59

    $default  reduce using rule 34 (boolfactor)


State 80

   18 input_stmt: INPUT '(' ID ')' ';' .

    $default  reduce using rule 18 (input_stmt)


State 81

   19 output_stmt: OUTPUT '(' expression ')' ';' .

    $default  reduce using rule 19 (output_stmt)


State 82

   22 switch_stmt: SWITCH '(' expression ')' '{' . caselist DEFAULT ':' stmtlist '}'

    $default  reduce using rule 24 (caselist)

    caselist  go to state 87


State 83

   21 while_stmt: WHILE ')' boolexpr '(' stmt .

    $default  reduce using rule 21 (while_stmt)


State 84

   40 factor: CAST '(' expression ')' .

    $default  reduce using rule 40 (factor)


State 85

   33 boolfactor: NOT '(' boolexpr ')' .

    $default  reduce using rule 33 (boolfactor)


State 86

   20 if_stmt: IF ')' boolexpr '(' stmt ELSE . stmt

    ID      shift, and go to state 12
    BREAK   shift, and go to state 13
    IF      shift, and go to state 14
    INPUT   shift, and go to state 15
    OUTPUT  shift, and go to state 16
    SWITCH  shift, and go to state 17
    WHILE   shift, and go to state 18
    '{'     shift, and go to state 5

    stmt             go to state 88
    assignment_stmt  go to state 21
    input_stmt       go to state 22
    output_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    switch_stmt      go to state 26
    break_stmt       go to state 27
    stmt_block       go to state 28


State 87

   22 switch_stmt: SWITCH '(' expression ')' '{' caselist . DEFAULT ':' stmtlist '}'
   23 caselist: caselist . CASE NUM ':' stmtlist

    CASE     shift, and go to state 89
    DEFAULT  shift, and go to state 90


State 88

   20 if_stmt: IF ')' boolexpr '(' stmt ELSE stmt .

    $default  reduce using rule 20 (if_stmt)


State 89

   23 caselist: caselist CASE . NUM ':' stmtlist

    NUM  shift, and go to state 91


State 90

   22 switch_stmt: SWITCH '(' expression ')' '{' caselist DEFAULT . ':' stmtlist '}'

    ':'  shift, and go to state 92


State 91

   23 caselist: caselist CASE NUM . ':' stmtlist

    ':'  shift, and go to state 93


State 92

   22 switch_stmt: SWITCH '(' expression ')' '{' caselist DEFAULT ':' . stmtlist '}'

    $default  reduce using rule 28 (stmtlist)

    stmtlist  go to state 94


State 93

   23 caselist: caselist CASE NUM ':' . stmtlist

    $default  reduce using rule 28 (stmtlist)

    stmtlist  go to state 95


State 94

   22 switch_stmt: SWITCH '(' expression ')' '{' caselist DEFAULT ':' stmtlist . '}'
   27 stmtlist: stmtlist . stmt

    ID      shift, and go to state 12
    BREAK   shift, and go to state 13
    IF      shift, and go to state 14
    INPUT   shift, and go to state 15
    OUTPUT  shift, and go to state 16
    SWITCH  shift, and go to state 17
    WHILE   shift, and go to state 18
    '{'     shift, and go to state 5
    '}'     shift, and go to state 96

    stmt             go to state 20
    assignment_stmt  go to state 21
    input_stmt       go to state 22
    output_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    switch_stmt      go to state 26
    break_stmt       go to state 27
    stmt_block       go to state 28


State 95

   23 caselist: caselist CASE NUM ':' stmtlist .
   27 stmtlist: stmtlist . stmt

    ID      shift, and go to state 12
    BREAK   shift, and go to state 13
    IF      shift, and go to state 14
    INPUT   shift, and go to state 15
    OUTPUT  shift, and go to state 16
    SWITCH  shift, and go to state 17
    WHILE   shift, and go to state 18
    '{'     shift, and go to state 5

    $default  reduce using rule 23 (caselist)

    stmt             go to state 20
    assignment_stmt  go to state 21
    input_stmt       go to state 22
    output_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    switch_stmt      go to state 26
    break_stmt       go to state 27
    stmt_block       go to state 28


State 96

   22 switch_stmt: SWITCH '(' expression ')' '{' caselist DEFAULT ':' stmtlist '}' .

    $default  reduce using rule 22 (switch_stmt)
